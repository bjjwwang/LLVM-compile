name: Build LLVM on Ubuntu 18.04 using Docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-ubuntu18:
    runs-on: ubuntu-24.04  # 使用 Ubuntu 24.04 的 runner
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Ubuntu 18.04 Docker Container and Build LLVM
        run: |
          docker run --rm -v $GITHUB_WORKSPACE:/workspace -w /workspace ubuntu:18.04 /bin/bash -c "
            set -e
            apt update && apt install -y build-essential cmake ninja-build python wget unzip
            wget 'https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-16.0.4.zip'
            unzip llvmorg-16.0.4.zip
            mv llvm-project-llvmorg-16.0.4 llvm-project
            mkdir -p llvm-project/llvm-build
            cd llvm-project/llvm-build
            cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/workspace/llvm-install -DLLVM_ENABLE_PROJECTS='clang' -DLLVM_ENABLE_RTTI=ON -DLLVM_BUILD_LLVM_DYLIB=ON -DLLVM_LINK_LLVM_DYLIB=ON ../llvm
            ninja -j$(nproc)
            ninja install
            cd /workspace
            tar -czvf llvm-install-ubuntu18.tar.gz llvm-install
          "

      - name: Move artifact to workspace
        run: |
          if [ -f "./llvm-install-ubuntu18.tar.gz" ]; then
            echo "File already exists in workspace, skipping move."
          else
            echo "Moving artifact to workspace..."
            cp $GITHUB_WORKSPACE/llvm-install-ubuntu18.tar.gz .
          fi

      - name: Debug upload-artifact
        run: |
          echo "Current Directory: $(pwd)"
          ls -lh
          ls -lh $GITHUB_WORKSPACE
          ls -lh ./llvm-install-ubuntu18.tar.gz

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: llvm-install-ubuntu18
          path: ./llvm-install-ubuntu18.tar.gz
