name: Build LLVM on Windows

on:
  push:
    branches: [ llvm-16-windows ]

jobs:
  build-llvm:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        choco install ninja --yes
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' --yes

    - name: Set up MSVC Developer Command Prompt
      uses: ilammy/msvc-dev-cmd@v1

    - name: Clone LLVM source
      run: |
        git clone --depth=1 --branch llvmorg-16.0.6 https://github.com/llvm/llvm-project.git
        dir llvm-project

    - name: Configure LLVM with CMake (Build DLL)
      run: |
        mkdir llvm-build
        cd llvm-build
        cmake ../llvm-project/llvm -G "Ninja" -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_PROJECTS="clang" -DLLVM_TARGETS_TO_BUILD=host -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}\\llvm-install" -DLLVM_ENABLE_ASSERTIONS=ON -DLLVM_ENABLE_RTTI=ON -DLLVM_ENABLE_EH=ON -DLLVM_BUILD_LLVM_DYLIB=ON -DLLVM_LINK_LLVM_DYLIB=ON


    - name: Build and install LLVM
      run: |
        cd llvm-build
        cmake --build . --target install

    - name: Verify llvm-config.cmake exists
      run: |
        if (Test-Path "${{ github.workspace }}\\llvm-install\\lib\\cmake\\llvm\\llvm-config.cmake") {
          Write-Host "✅ llvm-config.cmake was generated."
        } else {
          Write-Error "❌ llvm-config.cmake was not found."
          exit 1
        }

    - name: Check for libLLVM.dll
      run: |
        if (Test-Path "${{ github.workspace }}\\llvm-install\\bin\\libLLVM.dll") {
          Write-Host "✅ libLLVM.dll was generated."
        } else {
          Write-Error "❌ libLLVM.dll was not found."
          exit 1
        }

    - name: Upload LLVM build artifact
      uses: actions/upload-artifact@v4
      with:
        name: llvm-windows-build
        path: ${{ github.workspace }}\llvm-install
